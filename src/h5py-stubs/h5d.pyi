from typing import Any, ClassVar, NamedTuple

import h5py._objects

ALLOC_TIME_DEFAULT: int
ALLOC_TIME_EARLY: int
ALLOC_TIME_INCR: int
ALLOC_TIME_LATE: int
CHUNKED: int
COMPACT: int
CONTIGUOUS: int
FILL_TIME_ALLOC: int
FILL_TIME_IFSET: int
FILL_TIME_NEVER: int
FILL_VALUE_DEFAULT: int
FILL_VALUE_UNDEFINED: int
FILL_VALUE_USER_DEFINED: int
SPACE_STATUS_ALLOCATED: int
SPACE_STATUS_NOT_ALLOCATED: int
SPACE_STATUS_PART_ALLOCATED: int
VDS_FIRST_MISSING: int
VDS_LAST_AVAILABLE: int
VIRTUAL: int

def create(*args, **kwargs) -> Any: ...

namedtuple: function

def open(*args, **kwargs) -> Any: ...

phil: h5py._objects.FastRLock

class DatasetID(h5py._objects.ObjectID):
    dtype: Any
    rank: Any
    shape: Any
    def __init__(self, *args, **kwargs) -> None: ...
    def extend(self, *args, **kwargs) -> Any: ...
    def flush(self, *args, **kwargs) -> Any: ...
    def get_access_plist(self, *args, **kwargs) -> Any: ...
    def get_chunk_info(self, *args, **kwargs) -> Any: ...
    def get_chunk_info_by_coord(self, *args, **kwargs) -> Any: ...
    def get_create_plist(self, *args, **kwargs) -> Any: ...
    def get_num_chunks(self, *args, **kwargs) -> Any: ...
    def get_offset(self, *args, **kwargs) -> Any: ...
    def get_space(self, *args, **kwargs) -> Any: ...
    def get_space_status(self, *args, **kwargs) -> Any: ...
    def get_storage_size(self, *args, **kwargs) -> Any: ...
    def get_type(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    def read_direct_chunk(self, *args, **kwargs) -> Any: ...
    def refresh(self, *args, **kwargs) -> Any: ...
    def set_extent(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def write_direct_chunk(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class StoreInfo(NamedTuple):
    byte_offset: Any
    chunk_offset: Any
    filter_mask: Any
    size: Any

def with_phil(*args, **kwargs) -> Any: ...
