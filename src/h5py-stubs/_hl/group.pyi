from typing import Any

from .. import h5, h5g, h5i, h5l, h5o, h5p, h5r, h5t
from . import base, dataset, datatype
from .base import HLObject, MutableMappingHDF5, phil, with_phil
from .compat import filename_decode, filename_encode
from .vds import vds_support

class Group(HLObject, MutableMappingHDF5):
    def __init__(self, bind) -> None: ...
    def create_group(self, name, track_order: Any | None = ...): ...
    def create_dataset(
        self,
        name,
        shape: Any | None = ...,
        dtype: Any | None = ...,
        data: Any | None = ...,
        **kwds
    ): ...
    def create_virtual_dataset(self, name, layout, fillvalue: Any | None = ...): ...
    def build_virtual_dataset(
        self,
        name,
        shape,
        dtype,
        maxshape: Any | None = ...,
        fillvalue: Any | None = ...,
    ) -> None: ...
    def require_dataset(self, name, shape, dtype, exact: bool = ..., **kwds): ...
    def create_dataset_like(self, name, other, **kwupdate): ...
    def require_group(self, name): ...
    def __getitem__(self, name): ...
    def get(
        self, name, default: Any | None = ..., getclass: bool = ..., getlink: bool = ...
    ): ...
    def __setitem__(self, name, obj) -> None: ...
    def __delitem__(self, name) -> None: ...
    def __len__(self): ...
    def __iter__(self): ...
    def __contains__(self, name): ...
    def copy(
        self,
        source,
        dest,
        name: Any | None = ...,
        shallow: bool = ...,
        expand_soft: bool = ...,
        expand_external: bool = ...,
        expand_refs: bool = ...,
        without_attrs: bool = ...,
    ) -> None: ...
    def move(self, source, dest) -> None: ...
    def visit(self, func): ...
    def visititems(self, func): ...

class HardLink: ...

class SoftLink:
    @property
    def path(self): ...
    def __init__(self, path) -> None: ...

class ExternalLink:
    @property
    def path(self): ...
    @property
    def filename(self): ...
    def __init__(self, filename, path) -> None: ...
