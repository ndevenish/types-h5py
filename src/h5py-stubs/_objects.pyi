from typing import Any, ClassVar

def nonlocal_close(*args, **kwargs) -> Any: ...

phil: FastRLock

def print_reg(*args, **kwargs) -> Any: ...

class BogoLock:
    def __init__(self, *args, **kwargs) -> None: ...
    def __enter__(self) -> Any: ...
    def __exit__(self, type, value, traceback) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class FastRLock:
    def __init__(self, *args, **kwargs) -> None: ...
    def _is_owned(self, *args, **kwargs) -> Any: ...
    def acquire(self, *args, **kwargs) -> Any: ...
    def release(self, *args, **kwargs) -> Any: ...
    def __enter__(self) -> Any: ...
    def __exit__(self, type, value, traceback) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class ObjectID:
    fileno: Any
    id: Any
    locked: Any
    valid: Any
    def __init__(self, *args, **kwargs) -> None: ...
    def _close(self, *args, **kwargs) -> Any: ...
    def close(self, *args, **kwargs) -> Any: ...
    def __bool__(self) -> Any: ...
    def __copy__(self) -> Any: ...
    def __eq__(self, other) -> Any: ...
    def __ge__(self, other) -> Any: ...
    def __gt__(self, other) -> Any: ...
    def __hash__(self) -> Any: ...
    def __le__(self, other) -> Any: ...
    def __lt__(self, other) -> Any: ...
    def __ne__(self, other) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

def with_phil(*args, **kwargs) -> Any: ...
